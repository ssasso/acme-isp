---
# netlab default info for provider and device type
defaults.sources.extra: [ ../_include/netlab-defaults.yml ]

plugin: [ fix_frr, bgp.session, bgp.policy ]

# Include reusable components:
# - addressing pools
# - nodes
# - validation checks

_include:
- ../_include/addressing.yml
- ../_include/routing.yml
- ../_include/nodes.yml
- ../_include/validate.yml

#### GROUP SETTINGS BELOW. Used to define modules and testing configuration.
#### Comment this for normal workshop usage (or include only partial group config).
###### BGP Policy tweaks:
###### - we need to create, on border routers, fake med/local_preferences, to have a route-map attached to the neighbor config.
groups:
  _include:
  - ../_include/_groups/*.yml

# Unfortunately we cannot treat links as reusable components

# definition of all the links between the different virtual devices
links:
# ACME Internal Links

## core1 to core2
- core1:
  core2:
  pool: acme_p2p

## IGW 1 to C1 and C2
- core1:
  igw1:
  pool: acme_p2p
- core2:
  igw1:
  pool: acme_p2p

## IGW 2 to C1 and C2
- core1:
  igw2:
  pool: acme_p2p
- core2:
  igw2:
  pool: acme_p2p

## IXP to C1 and C2
- core1:
  ixp:
  pool: acme_p2p
- core2:
  ixp:
  pool: acme_p2p

## CORP1 to C1 and C2
- core1:
  corp1:
  pool: acme_p2p
- core2:
  corp1:
  pool: acme_p2p

## CORP2 to C1 and C2
- core1:
  corp2:
  pool: acme_p2p
- core2:
  corp2:
  pool: acme_p2p

## BRAS to C1 and C2
- core1:
  bras:
  pool: acme_p2p
- core2:
  bras:
  pool: acme_p2p

# ACME Transit and Peerings

## transit 1 - policy: this needs to be preferred over transit 2
- transit1:
  igw1:
    bgp:
      remove_private_as: true
      policy.out: acme_outbound
      policy.in: locpref_100
  pool: t1_p2p

## transit 2 - policy: backup transit
- transit2:
  igw2:
    bgp:
      remove_private_as: true
      policy.out: acme_outbound_t2
      policy.in: locpref_50
  pool: t2_p2p

## ixp - policy: this needs to be preferred over all transits.
- ixp:
    bgp:
      remove_private_as: true
      policy.out: acme_outbound
      policy.in: locpref_200
  winsrt:
    bgp:
      policy.out: local_as_only
      policy.in: locpref_200
  ixp_rs:
  pool: ixp_lan

# ACME Customers

## Cust-1
- corp1:
    bgp:
      advertise: true
      policy.in: cust_1_only
  c1rt:
    bgp:
      policy.out: med_20
      policy.in: locpref_200
  pool: acme_p2p_cust
- corp2:
    bgp:
      advertise: true
      policy.in: cust_1_only
  c1rt:
    bgp:
      policy.out: med_100
      policy.in: locpref_100
  pool: acme_p2p_cust
- c1rt:
    bgp.advertise: true
  c1host:
  pool: cust1_lan

## BRAS "dynamic" LAN
- bras:
    bgp.advertise: true
  c2host:
  c3host:
  pool: bras_lan

# WINstagram
- transit1:
  winsrt:
    bgp:
      policy.out: local_as_only
  pool: t1_p2p
- transit2:
  winsrt:
    bgp:
      policy.out: local_as_only
  pool: t2_p2p
- winsrt:
    bgp.advertise: true
  winsweb:
  pool: wins_lan

# Newspaper-X
- transit1:
  nxrt:
    bgp:
      policy.out: local_as_only
  pool: t1_p2p
- transit2:
  nxrt:
    bgp:
      policy.out: local_as_only
  pool: t2_p2p
- nxrt:
    bgp.advertise: true
  nxweb:
  pool: nx_lan

# let's assume transit 1 and transit 2 are linked each other, like it happens for Tier 1 operators
#  - but this link needs to have the lower priority, compared to direct customer connectivities
- transit1:
    bgp.locpref: 50
  transit2:
    bgp.locpref: 50
  pool: t1_p2p



# IGNORE ROUTING CONFIG ON THE FOLLOWING DEVICES (handled by custom plugin fix_frr):

remove_routing_group_data:
- c1_routers
- ixp_rs_g
- n_routers
- t1_routers
- t2_routers
- w_routers
